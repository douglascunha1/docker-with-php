services:
  # NGINX
  web: # Serviço(Container para o nginx)
    image: nginx:latest # Imagem a ser usada
    ports: # Porta a ser usada(host:container)
      - "80:80"
    volumes: # Permite criar volumes mapeados do host:container
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf

  # PHP
  app:
    build:
      dockerfile: ./php/Dockerfile
    volumes: # Cria o volume mapeado do host:container
      - /var/www/html/vendor # Protege o diretório vendor para que o comando logo abaixo que não haja sobrescrita
      - ./app:/var/www/html

  # MYSQL
  db:
    image: mysql:8.4.4
    volumes: # Deixamos o Docker definir a melhor estratégia de persistência dos dados
      - mysqldata:/var/lib/mysql
    ports: # Porta padrão do MySQL (host:container)
      - "3306:3306"
    restart: unless-stopped # Reinicia caso algo dê errado ou até o container ser parado
    environment: # Variáveis de ambiente do MySQL que serão utilizadas quando o container for inicializado
      MYSQL_ROOT_PASSWORD: rootpassword # Senha do usuário root
      MYSQL_USER: myuser # Usuário "normal"
      MYSQL_PASSWORD: userpassword # Senha do usuário "normal"
      MYSQL_DATABASE: docker-php # Nome do banco a ser usado

volumes:
  mysqldata: